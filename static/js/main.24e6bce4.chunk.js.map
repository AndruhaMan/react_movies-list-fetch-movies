{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","services/movie.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onMovieAdd","useState","query","setQuery","hasError","setHasError","isLoading","setIsLoading","foundMovie","setFoundMovie","onSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","data","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","cn","value","onChange","target","disabled","onClick","some","movieInList","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24e6bce4.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { haveThisMovieInList } from '../../services/movie';\n\n// eslint-disable-next-line max-len\nconst DEFAULT_IMAGE = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\ntype Props = {\n  movies: Movie[],\n  onMovieAdd: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, onMovieAdd }) => {\n  const [query, setQuery] = useState('');\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [foundMovie, setFoundMovie]\n    = useState<Movie | null>(null);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    getMovie(query)\n      .then((data: MovieData | ResponseError) => {\n        if ('Error' in data) {\n          setHasError(true);\n          setFoundMovie(null);\n\n          return;\n        }\n\n        setFoundMovie({\n          title: data.Title,\n          description: data.Plot,\n          imgUrl: data.Poster === 'N/A'\n            ? DEFAULT_IMAGE\n            : data.Poster,\n          imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n          imdbId: data.imdbID,\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handleInputChanging = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setHasError(false);\n  };\n\n  const handleMovieAdding = () => {\n    if (foundMovie && !haveThisMovieInList(movies, foundMovie)) {\n      onMovieAdd(foundMovie);\n    }\n\n    setQuery('');\n    setFoundMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn(\n                'input',\n                { 'is-danger': hasError && !isLoading },\n              )}\n              value={query}\n              onChange={handleInputChanging}\n            />\n          </div>\n          {hasError && !isLoading && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn(\n                'button',\n                'is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {foundMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleMovieAdding}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {foundMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={foundMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=d0061aa8';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { Movie } from '../types/Movie';\n\nexport function haveThisMovieInList(movieList: Movie[], movie: Movie) {\n  return movieList.some(movieInList => (\n    movieInList.imdbId === movie.imdbId\n  ));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          onMovieAdd={(movie) => setMovies([...movies, movie])}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}